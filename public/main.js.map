{"version":3,"sources":["./src/app/services/syncronize-data.service.ts","./src/environments/environment.ts","./src/app/components/chatroom/chatroom.component.html","./src/app/components/chatroom/chatroom.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/services/server.service.ts","./src/app/server/server.component.ts","./src/app/server/server.component.html","./src/app/server/maria/maria.component.ts","./src/app/server/maria/maria.component.html","./src/app/server/components.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/server/david/david.component.ts","./src/app/server/david/david.component.html","./src/app/app.module.ts","./src/app/guard/auth.guard.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/services/room.service.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Message } from '../models/message';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SyncronizeDataService {\r\n\r\n  users: User[] = [\r\n    {idUser: '1', email: 'dassdsad', username: 'daniel'},\r\n    {idUser: '2', email: 'dassdsad', username: 'maria'},\r\n    {idUser: '3', email: 'dassdsad', username: 'sofia'},\r\n    {idUser: '4', email: 'dassdsad', username: 'david'},\r\n    {idUser: '5', email: 'dassdsad', username: 'juan'},\r\n  ]\r\n  messages: Message[] = [\r\n    {user: 'Daniel', content: 'hola', date: '14.00'},\r\n    {user: 'David', content: 'hola', date: '14.00'},\r\n    {user: 'Daniel', content: 'como estas?', date: '14.00'},\r\n    {user: 'David', content: 'bien, y tu?', date: '14.00'},\r\n    {user: 'Daniel', content: 'bien, gracias', date: '14.00'},\r\n  ]\r\n\r\n  private sendMessagesSubject = new Subject<Message[]>();\r\n  sendMessagesObservable = this.sendMessagesSubject.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  sendMessage(message: string) {\r\n    var newMessage = {\r\n      user: 'Daniel', content: message, date:'13.00'\r\n    }\r\n    // this.sendMessagesSubject.next(Object.assign(newMessage, this.messages));\r\n    this.messages.push(newMessage)\r\n  }\r\n\r\n  getMessages() {\r\n    return this.messages;\r\n  }\r\n\r\n  getUsers() {\r\n\r\n  }\r\n\r\n  loadAll() {\r\n    this.messages.forEach(i => {\r\n      this.sendMessagesSubject.next();\r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyBCqwYOQW8ZaFo2fxRTvv2ggGZfEZASynY\",\r\n    authDomain: \"whatsup-80e9a.firebaseapp.com\",\r\n    projectId: \"whatsup-80e9a\",\r\n    storageBucket: \"whatsup-80e9a.appspot.com\",\r\n    messagingSenderId: \"555842357677\",\r\n    appId: \"1:555842357677:web:b9e82f0bc89b62e899f924\",\r\n    measurementId: \"G-G9T9DVK6PK\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"row mx-0\">\r\n  <div class=\"col-2\">\r\n    <div class=\"users-pane\">\r\n      <div class=\"users-card\" *ngFor=\"let user of users\">\r\n        <mat-icon>person</mat-icon><span class=\"username\">{{user.username}}</span>\r\n      </div>\r\n      <div *ngIf=\"isJoinChat;else noJoinChat\">\r\n        <button mat-button (click)=\"exitChatRoom()\">Exit Chat</button>\r\n      </div>\r\n      <ng-template #noJoinChat>\r\n        <button mat-button (click)=\"joinChatRoom()\">Join Chat</button>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-10\">\r\n    <div class=\"chat-pane\" id=\"chat-pane\">\r\n      <div class=\"message-box\" *ngFor=\"let message of messages; let last = last\">\r\n        {{last ? autoScroll() : ''}}\r\n        <div class=\"chat-message\">\r\n          <div class=\"rigth-bubble\" [ngClass]=\"message.user === username ? 'right-bubble' : 'left-bubble'\">\r\n            <span class=\"msg-name\" *ngIf=\"message.user === username\">Me</span>\r\n            <span class=\"msg-name\" *ngIf=\"message.user !== username\">{{message.user}}</span>\r\n            <span class=\"msg-date\"> at {{message.date}}</span>\r\n            <p class=\"word-grap\">{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"isJoinChat\">\r\n  <div class=\"row mx-0\">\r\n    <div class=\"d-flex justify-content-end\">\r\n      <form #messageForm=\"ngForm\" (ngSubmit)=\"onSubmit(messageInput.value)\" style=\"width: 80%;\">\r\n        <input class=\"messageInput\" placeholder=\"Write message here\" [(ngModel)]=\"message\" name=\"message\" #messageInput required>\r\n        <button type=\"submit\" [disabled]=\"!messageForm.form.valid\" mat-icon-button>\r\n          <mat-icon>send</mat-icon>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Message } from 'src/app/models/message';\r\nimport { User } from \"../../models/user\";\r\nimport { Room } from 'src/app/models/room';\r\nimport { RoomService } from \"../../services/room.service\";\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-chatroom',\r\n  templateUrl: './chatroom.component.html',\r\n  styleUrls: ['./chatroom.component.scss']\r\n})\r\nexport class ChatroomComponent implements OnInit {\r\n\r\n  messages: Message[];\r\n  room: Room;\r\n  users: User[];\r\n  message: string = '';\r\n  username: string = '';\r\n  isJoinChat = false;\r\n  @ViewChild('messageInput') messageInput: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute, \r\n    private roomService: RoomService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getChatRoom();\r\n  }\r\n\r\n  getChatRoom() {\r\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.roomService.getRoom(id).subscribe(data => {\r\n      if (data.length == 0) {\r\n        this.roomService.newChatRoom(id);\r\n      } else {\r\n        this.users = data[0][\"users\"] as User[]\r\n        this.messages = data[0][\"messages\"] as Message[]\r\n        this.room = data[0] as Room;\r\n        this.roomService.setCurrentRoom(data[0])\r\n      }\r\n      this.username = this.authService.currentUser.username;\r\n    })\r\n  }\r\n\r\n  joinChatRoom() {\r\n    this.roomService.setNewUser(this.authService.currentUser);\r\n    this.isJoinChat = true;\r\n  }\r\n\r\n  onSubmit(message: string) {\r\n    var date = new Date().toLocaleTimeString().split(':',2).join(':');\r\n    var newMessage: Message = {\r\n      user: this.authService.currentUser.username, content: message, date: date\r\n    }\r\n    this.roomService.sendMessage(newMessage);\r\n    this.autoScroll();\r\n    this.messageInput.nativeElement.value = '';\r\n  }\r\n\r\n  autoScroll() {\r\n    var chat = document.getElementById('chat-pane')\r\n    chat.scroll({left: 0, top: document.getElementById('chat-pane').scrollHeight, behavior: 'smooth'});\r\n  }\r\n\r\n  exitChatRoom() {\r\n    this.roomService.removeUserChat(this.authService.currentUser);\r\n    this.isJoinChat = false;\r\n  }\r\n}\r\n","<div class=\"parallax\">\r\n  <div class=\"overImage\">\r\n    <span class=\"textOver\">\r\n      Find the best rooms to chat with people from over the world and talk about different topics\r\n    </span>\r\n    <h1 class=\"title\">WhatsUp!!</h1>\r\n  </div>\r\n</div>\r\n<div class=\"parallax\"></div>\r\n<div class=\"parallax\"></div>\r\n<div class=\"servers\">\r\n  <div class=\"row row-cols-1 row-cols-md-3 mx-0\">\r\n    <div class=\"col mb-3\" *ngFor=\"let server of servers\">\r\n      <div class=\"card text-white bg-dark\">\r\n        <img src=\"/assets/imgs/{{server.image}}\" class=\"card-img-top\" alt=\"{{server.image}}\">\r\n        <div class=\"card-body\">\r\n          <h1 class=\"card-title\">{{server.title}}</h1>\r\n          <p class=\"card-text\">{{server.description}}</p>\r\n        </div>\r\n        <div class=\"card-footer d-flex\">\r\n          <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n          <span class=\"spacer\"></span>\r\n          <a mat-flat-button color=\"primary\" href=\"/chatroom/{{server.idServer}}\">Join here</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Server } from 'src/app/models/server';\r\nimport { ServerService } from '../../services/server.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  message: string = 'mensaje'\r\n  servers: Server[];\r\n\r\n  constructor(public serverService: ServerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.serverService.getServers().subscribe(servers => {\r\n      this.servers = servers\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Server } from '../models/server';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServerService {\r\n\r\n  serversList: AngularFirestoreCollection<Server>;\r\n  servers: Observable<Server[]>;\r\n  \r\n  constructor(private fs: AngularFirestore) {\r\n    this.serversList = fs.collection('servers');\r\n  }\r\n  \r\n  getServers() {\r\n    this.servers = this.serversList.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data();\r\n        data.key = a.payload.doc.id;\r\n        return data;\r\n      }))\r\n    );\r\n    return this.servers\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styleUrls: ['./server.component.scss']\r\n})\r\nexport class ServerComponent implements OnInit {\r\n\r\n  message: string = 'mensaje'\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.message = \"desde servidor\";\r\n  }\r\n}\r\n","<h1>Server Component</h1>\r\n<hr>\r\n<h3>{{message}}</h3>\r\n\r\n<button (click)=\"sendMessage()\">sendMessage</button>\r\n<hr>\r\n<!-- <app-david [messageDavid]=\"message\" (updateMessages)=\"message = $event\" ></app-david> -->\r\n<!-- <app-maria [messageMaria]=\"message\" (updateMessages)=\"message = $event\" ></app-maria> -->\r\n<!-- <app-home></app-home> -->\r\n<div class=\"chatArea\">\r\n  <div class=\"row mx-0\">\r\n    <div class=\"col-6\">\r\n      <app-david></app-david>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <app-maria></app-maria>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Message } from 'src/app/models/message';\r\nimport { SyncronizeDataService } from 'src/app/services/syncronize-data.service';\r\n\r\n@Component({\r\n  selector: 'app-maria',\r\n  templateUrl: './maria.component.html',\r\n  styleUrls: ['./maria.component.scss']\r\n})\r\nexport class MariaComponent implements OnInit {\r\n\r\n  @Input() messageMaria: string = \"maria\"\r\n  @Output() updateMessages = new EventEmitter<string>();\r\n  messages: Message[];\r\n\r\n  constructor(private syncronizeData: SyncronizeDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.messages = this.syncronizeData.getMessages()\r\n    this.syncronizeData.sendMessagesObservable.subscribe(messages => {\r\n      this.messages = messages\r\n    })\r\n  }\r\n\r\n  sendMessage(message: string) {\r\n    // this.messageMaria = \"enviar mensaje desde maria\"\r\n    // this.updateMessages.emit(this.messageMaria)\r\n    // this.syncronizeData.messages = this.messageMaria\r\n    this.syncronizeData.sendMessage(message);\r\n  }\r\n\r\n  autoScroll() {\r\n    document.getElementById('chat2').scroll({left: 0, top: document.getElementById('chat2').scrollHeight, behavior: 'smooth'})\r\n  }\r\n\r\n}\r\n","<h3>Soy maria</h3>\r\n<!-- <p>{{ messageMaria }}</p> #scrollMe [scrollTop]=\"scrollMe.scrollHeight\"-->\r\n<div class=\"chat\" id=\"chat2\">\r\n  <ul *ngFor=\"let message of messages; let last = last\">\r\n    {{last ? autoScroll() : ''}}\r\n    <li class=\"word-wrap\">{{message.content}}</li>\r\n  </ul>\r\n</div>\r\n<input type=\"text\" id=\"message\" name=\"message\" #messageInput>\r\n<button mat-icon-button (click)=\"sendMessage(messageInput.value);messageInput.value=''\">\r\n  <mat-icon>send</mat-icon>\r\n</button>\r\n<hr>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DavidComponent } from './david/david.component';\r\nimport { MariaComponent } from './maria/maria.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DavidComponent,\r\n    MariaComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ], \r\n  exports: [\r\n    DavidComponent,\r\n    MariaComponent,\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'WhatsUp';\r\n}\r\n","<div class=\"row mx-0\">\r\n  <div class=\"col-2 px-0\">\r\n    <app-sidebar></app-sidebar>\r\n  </div>\r\n  <div class=\"col-10 px-0\">\r\n    <app-navbar></app-navbar>\r\n    <div class=\"container pt-5\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","<div class=\"containerLogin\">\r\n  <div class=\"myrow\">\r\n    <h2 class=\"text-center\">Login with Social Media or Manually</h2>\r\n    <div class=\"vl\">\r\n      <span class=\"inner\">or</span>\r\n    </div>\r\n    <div class=\"mycol\">\r\n      <a href=\"\" class=\"fb btn\">\r\n        Login with Facebook\r\n      </a>\r\n      <a href=\"\" class=\"twitter btn\">\r\n        Login with Twitter\r\n      </a>\r\n      <a href=\"\" class=\"google btn\">\r\n        Login with Google+\r\n      </a>\r\n    </div>\r\n    <div class=\"mycol\">\r\n      <div class=\"hide-md-lg\">\r\n        <p>Or sign in manually:</p>\r\n      </div>\r\n      <form #signInForm=\"ngForm\" (ngSubmit)=\"onSignIn()\">\r\n        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\r\n        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" required>\r\n        <button class=\"btn btn-success\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottom-container\">\r\n    <div class=\"row mx-0\">\r\n      <div class=\"col\">\r\n        <p class=\"text-white\">Don’t you have an account? <a class=\"text-white\" (click)=\"openModal(signUpModal)\">Sign up</a></p>\r\n      </div>\r\n      <div class=\"col\">\r\n        <a class=\"text-white\" href=\"\">Forgot password?</a>\r\n      </div>\r\n    </div>\r\n  </div> \r\n</div>\r\n<ng-template #signUpModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h1 class=\"modal-title\" id=\"modal-basic-title\">Sign Up</h1>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #signUpForm=\"ngForm\" (ngSubmit)=\"onSignUp()\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-md-6 col-12 mb-3\">\r\n          <label for=\"username\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" required>\r\n        </div>\r\n        <div class=\"col-md-6 col-12 mb-3\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-md-6 col-12 mb-3\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\r\n        </div>\r\n        <div class=\"col-md-6 col-12 mb-3\">\r\n          <label for=\"password2\">Repeat password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password2\" name=\"password2\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"check\" name=\"check\" required>\r\n        <label class=\"form-check-label\" for=\"check\">Agree to terms and conditions</label>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!signUpForm.form.valid\">Sign up</button>\r\n        <button class=\"btn btn-danger\" (click)=\"modal.close();clearForm();\">Cancel</button>\r\n      </div>\r\n    </form> \r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  islogged: boolean = false;\r\n  email: string = \"daniel@hotmail.es\";\r\n  password: string = \"123456\";\r\n  username: string = \"Daniel\";\r\n\r\n  constructor(public authService: AuthService, private router: Router, private modal: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal(content: any) {\r\n    this.modal.open(content, { size: 'lg', centered: true});\r\n  }\r\n\r\n  onSignUp(): void {\r\n    this.authService.signUp(this.username, this.email, this.password)\r\n    .then((result) => {\r\n      this.modal.dismissAll();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  onSignIn(): void {\r\n    this.authService.signIn(this.email, this.password)\r\n    .then((result) => {\r\n      // this.router.navigate(['/home'])\r\n    })\r\n    .catch( error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  clearForm() {\r\n    this.email = '';\r\n    this.username = '';\r\n    this.password = '';\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Message } from 'src/app/models/message';\r\nimport { SyncronizeDataService } from 'src/app/services/syncronize-data.service';\r\n\r\n@Component({\r\n  selector: 'app-david',\r\n  templateUrl: './david.component.html',\r\n  styleUrls: ['./david.component.scss']\r\n})\r\nexport class DavidComponent implements OnInit {\r\n\r\n  @Input() messageDavid: string = \"david\"\r\n  @Output() updateMessages = new EventEmitter<string>();\r\n  messages: Message[];\r\n  message: string = '';\r\n\r\n  constructor(private syncronizeData: SyncronizeDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.syncronizeData.sendMessagesObservable.subscribe(messages => {\r\n      this.messages = messages\r\n    })\r\n  }\r\n\r\n  sendMessage(message: string) {\r\n    // this.messageDavid = \"enviar mensaje desde david\"\r\n    // this.updateMessages.emit(this.messageDavid)\r\n    this.syncronizeData.sendMessage(message);\r\n  }\r\n\r\n  getMessages() {\r\n    this.messages = this.syncronizeData.getMessages()\r\n  }\r\n\r\n  autoScroll() {\r\n    document.getElementById('chat').scroll({left: 0, top: document.getElementById('chat').scrollHeight, behavior: 'smooth'})\r\n  }\r\n}\r\n","<h3>Soy david</h3>\r\n\r\n<div class=\"chat\" id=\"chat\">\r\n  <ul *ngFor=\"let message of messages; let last = last\">\r\n    {{last ? autoScroll() : ''}}\r\n    <li class=\"word-wrap\">{{message.content}}</li>\r\n  </ul>\r\n</div>\r\n<input type=\"text\" id=\"message\" name=\"message\" #messageInput>\r\n<button mat-icon-button (click)=\"sendMessage(messageInput.value);messageInput.value=''\">\r\n  <mat-icon>send</mat-icon>\r\n</button>\r\n<button (click)=\"getMessages()\">get</button>\r\n<hr>","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ComponentsModule } from './server/components.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n// firestore\r\nimport { AngularFireModule } from '@angular/fire'\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// services\r\nimport { AuthService } from \"./services/auth.service\";\r\nimport { RoomService } from \"./services/room.service\";\r\nimport { ServerService } from \"./services/server.service\";\r\nimport { SyncronizeDataService } from \"./services/syncronize-data.service\";\r\n\r\n// angular material\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n// components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ServerComponent } from './server/server.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    ServerComponent,\r\n    SidebarComponent,\r\n    LoginComponent,\r\n    ChatroomComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ComponentsModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    NgbModule,\r\n    MatTooltipModule,\r\n  ],\r\n  providers: [AuthService, SyncronizeDataService, RoomService, ServerService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(public authService: AuthService, public router: Router) {\r\n    \r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      console.log(this.authService.currentUser, 'guard');\r\n      if (localStorage.getItem('user') == null) {\r\n        \r\n        console.log('no logged');\r\n        \r\n        this.router.navigate(['/login'])\r\n      }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","<div>\r\n  <mat-toolbar color=\"primary\">\r\n    <a mat-button href=\"/server\" class=\"mynav-item\">Servers</a>\r\n    <a mat-button href=\"/friends\" class=\"mynav-item\">Friends</a>\r\n    <a mat-button href=\"/home\" class=\"mynav-item\">Home</a>\r\n    <a mat-button href=\"/david\" class=\"mynav-item\">David</a>\r\n    <a mat-button href=\"/maria\" class=\"mynav-item\">Maria</a>\r\n    <span class=\"example-spacer\"></span>\r\n    <div *ngIf=\"authService.currentUser;else noSignIn\">\r\n      <button mat-button class=\"mynav-item\">{{authService.currentUser.username}}</button>\r\n      <a mat-icon-button class=\"mynav-item\" matTooltip=\"Add server\"><mat-icon>add</mat-icon></a>\r\n      <a mat-icon-button class=\"mynav-item\" (click)=\"onSignOut()\" matTooltip=\"Sign Out\"><mat-icon>logout</mat-icon></a>\r\n      <a mat-icon-button class=\"mynav-item\" matTooltip=\"Edit profile\"><mat-icon>settings</mat-icon></a>\r\n    </div>\r\n    <ng-template #noSignIn>\r\n      <a mat-icon-button class=\"mynav-item\" matTooltip=\"Sign In\" href=\"/login\"><mat-icon>login</mat-icon></a>\r\n    </ng-template>\r\n  </mat-toolbar>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  username: string = \"\";\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentUser()\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (this.authService.isAuth) {\r\n      var user = this.authService.getCurrentUser()\r\n    }\r\n  }\r\n\r\n  onSignOut() {\r\n    this.authService.signOut()\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { User } from \"../models/user\";\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore'\r\nimport { Router } from \"@angular/router\";\r\n// import { auth } from 'firebase/app';\r\nimport * as firebase from 'firebase';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user: any;\r\n  currentUser: User;\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth, \r\n    private router: Router, \r\n    private fs: AngularFirestore, \r\n    private ngZone: NgZone\r\n  ) { \r\n      this.afAuth.authState.subscribe(user => {\r\n        if (user) {\r\n          this.user = user;\r\n          this.setCurrentUser(user);\r\n          localStorage.setItem('user', this.user);\r\n          localStorage.getItem('user');\r\n        } else {\r\n          this.currentUser = null\r\n          localStorage.setItem('user', null);\r\n          localStorage.getItem('user');\r\n        }\r\n      })\r\n    }\r\n    \r\n    get isAuth(): boolean {\r\n      return (localStorage.getItem('user') === null) ? false : true;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return this.currentUser\r\n  }\r\n\r\n  signUp(username:string, email: string, password: string) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email.trim(), password)\r\n      .then((result) => {\r\n        result.user.updateProfile({\r\n          displayName: username\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  signIn(email: string, password: string) {\r\n    return this.afAuth.signInWithEmailAndPassword(email.trim(), password)\r\n      .then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['/home']);\r\n        })\r\n        this.setCurrentUser(result.user)\r\n        this.user = result\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  signInGoogle() {\r\n    // return this.authLogin(new firebase.default.auth.GoogleAuthProvider).then(credential => this.setCurrentUser(credential.user))\r\n  }\r\n\r\n  signInFacebook() {\r\n    // return this.authLogin(new auth.FacebookAuthProvider).then(credential => this.setCurrentUser(credential.user))\r\n  }\r\n\r\n  signInTwitter() {\r\n    // return this.authLogin(new auth.TwitterAuthProvider).then(credential => this.setCurrentUser(credential.user))\r\n  }\r\n\r\n  authLogin(provider)  {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n      this.ngZone.run(() => {\r\n        this.router.navigate(['/chatroom']);\r\n      })\r\n      this.setCurrentUser(result.user);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  \r\n  signOut(): void {\r\n    this.currentUser = null\r\n    this.afAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['/home'])\r\n    });\r\n  }\r\n\r\n  setCurrentUser(user: any) {\r\n    this.currentUser = {\r\n      idUser: user.uid,\r\n      username: user.displayName,\r\n      email: user.email,\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { DavidComponent } from './server/david/david.component';\r\nimport { MariaComponent } from './server/maria/maria.component';\r\nimport { ServerComponent } from './server/server.component';\r\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\r\nimport { AuthGuard } from \"./guard/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  { path:'home', component: HomeComponent},\r\n  { path:'login', component: LoginComponent},\r\n  { path:'david', component: DavidComponent},\r\n  { path:'maria', component: MariaComponent},\r\n  { path:'server', component: ServerComponent},\r\n  { path:'chatroom/:id', component: ChatroomComponent, canActivate: [AuthGuard] },\r\n  { path:'**', component: HomeComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../models/message';\r\nimport { Room } from '../models/room';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoomService {\r\n\r\n  roomsList: AngularFirestoreCollection<Room>;\r\n  rooms: Observable<Room[]>;\r\n  public currentRoom: Room;\r\n\r\n  constructor(private fs: AngularFirestore) {\r\n    this.roomsList = fs.collection('chatroom');\r\n  }\r\n  \r\n  getRooms() {\r\n    this.rooms = this.roomsList.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data();\r\n        data.key = a.payload.doc.id;\r\n        return data;\r\n      }))\r\n    );\r\n    return this.rooms;\r\n  }\r\n\r\n  getRoom(id: number) {\r\n    return this.fs.collection<Room>('chatroom', ref => ref.where('idRoom', '==', id)).valueChanges();\r\n  }\r\n\r\n  newChatRoom(id: number) {\r\n    const key = this.fs.createId();\r\n    var room: Room = {\r\n      key: key,\r\n      idRoom: id,\r\n      users: [],\r\n      messages: []\r\n    }\r\n    this.setCurrentRoom(room);\r\n    this.fs.doc(`chatroom/${key}`).set(room);\r\n  }\r\n\r\n  setCurrentRoom(room: Room) {\r\n    this.currentRoom = {\r\n      key: room.key,\r\n      idRoom: room.idRoom,\r\n      users: room.users,\r\n      messages: room.messages,\r\n    }\r\n  }\r\n\r\n  setNewUser(user: User) {\r\n    var isNewUser = true;\r\n    this.currentRoom.users.forEach(elemt => {\r\n      if (elemt.email == user.email) {\r\n        isNewUser = false;\r\n      }\r\n    })\r\n    if (isNewUser) {\r\n      this.currentRoom.users.push(user)\r\n      this.roomsList.ref.doc(this.currentRoom.key).update(this.currentRoom)\r\n    }\r\n  }\r\n\r\n  removeUserChat(user: User) {\r\n    // this.currentRoom.users.filter(item => item.email !== user.email)\r\n    var users = []\r\n    this.currentRoom.users.forEach (item => {\r\n      if (item.email !== user.email) {\r\n        users.push(item);\r\n      }\r\n    })\r\n    this.currentRoom.users = users;\r\n    this.roomsList.ref.doc(this.currentRoom.key).update(this.currentRoom);\r\n\r\n  }\r\n\r\n  sendMessage(message: Message) {\r\n    this.currentRoom.messages.push(message)\r\n    this.roomsList.ref.doc(this.currentRoom.key).update(this.currentRoom);\r\n  }\r\n\r\n  updateRoom(room: Room) {\r\n    this.roomsList.ref.doc(room.key).update(room);\r\n  }\r\n\r\n  deleteRoom(key: string) {\r\n    this.roomsList.doc(key).delete();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<aside class=\"sidebar\">\r\n  <ul class=\"nav flex-column\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"/home\"><button mat-icon-button>\r\n        <mat-icon>home</mat-icon><span class=\"m-2\">Home</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>videogame_asset</mat-icon><span class=\"m-2\">Gaming</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>music_note</mat-icon><span class=\"m-2\">Music</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>import_contacts</mat-icon><span class=\"m-2\">Manga</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>school</mat-icon><span class=\"m-2\">Education</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>developer_board</mat-icon><span class=\"m-2\">Tech</span>\r\n      </button></a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"link-nav\" href=\"\"><button mat-icon-button>\r\n        <mat-icon>favorite</mat-icon><span class=\"m-2\">Favorites</span>\r\n      </button></a>\r\n    </li>\r\n  </ul>\r\n</aside>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}